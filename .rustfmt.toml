# rustfmt.toml — stable, team-friendly defaults

# Style edition controls formatting rules (separate from language edition).
# Works with stable toolchains and avoids “my cargo fmt vs your rustfmt” drift.
style_edition = "2024"

# Only needed if you run `rustfmt` directly (cargo fmt reads Cargo.toml’s edition).
edition = "2024"

# Line width & heuristics
max_width = 120
use_small_heuristics = "Default" # Keep more items on one line when it’s readable.

# Whitespace & newlines
hard_tabs = false
tab_spaces = 2
newline_style = "Unix"

# Imports
reorder_imports = true # Sort consistently without changing import layout strategy.

# Comments & strings (conservative on stable)
# normalize_comments = true # Fix odd spacing without reflowing text.
# format_strings = false    # Don’t rewrite string literals (less diff churn).

# Project hygiene (skip known noisy paths)
# ignore = ["target", "node_modules", "vendor", "generated/"]

# Nightly-only extras:
# unstable_features = true
# imports_granularity = "Crate"      # Merge same-crate uses into one line
# group_imports = "StdExternalCrate" # Group: std | external | crate(local)
# wrap_comments = true               # Reflow long comments to max_width
# format_code_in_doc_comments = true # Format code blocks in rustdoc
