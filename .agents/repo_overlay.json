{"repo":"/Users/james/Projects/git-activity-report","generated_at":"2025-08-31T19-51-26","modules":[{"file":"src/commit.rs" ,"role":"commit construction/enrichment" ,"purpose":"Construct per-commit objects; enrich with optional PR links; embed or save patches as configured" ,"outputs":"Commit structs with files/diffstat/patch_ref; optional patch text and saved patch files" ,"invariants":["clip_patch preserves UTF-8 boundaries; patch_clipped is accurate" ,"body_lines derived when body is non-empty" ,"enrichment is best-effort; absence of PRs leaves fields None"] } ,{"file":"src/util.rs" ,"role":"utilities/helpers" ,"purpose":"Utilities for paths, time formatting, spacing-safe helpers, and man page rendering" ,"outputs":"Canonicalized paths, formatted timestamps, directories ensured, man page text" ,"invariants":["prepare_out_dir returns an existing directory (either provided or temp timestamped)" ,"clip_patch never splits UTF-8; indicates clipping accurately" ,"format_shard_name pattern is stable and locale-independent"] } ,{"file":"src/render.rs" ,"role":"assembly/render" ,"purpose":"Assemble per-range reports; when split_apart, write commit shards and per-range report, returning a pointer" ,"outputs":"SimpleReport JSON (non-split) or pointer {dir, file} (split)" ,"invariants":["run_simple returns fully in-memory report consistent with schema" ,"run_report returns pointer JSON when split; otherwise full report JSON; file names are stable" ,"shard filenames follow YYYY.MM.DD-HH.MM-<shortsha>.json"] } ,{"file":"src/manifest.rs" ,"role":"persistence/manifest" ,"purpose":"Build and write overall manifest for multi-range runs" ,"outputs":"manifest.json file written under base_dir" ,"invariants":["manifest contains ranges[] in chronological order of entries provided" ,"file paths in entries are relative to base_dir and point to report-<label>.json" ,"generated_at is serialized in %Y-%m-%dT%H:%M:%S (local)"] } ,{"file":"src/params.rs" ,"role":"parameter mapping" ,"purpose":"Translate EffectiveConfig + [since,until] into ReportParams for render" ,"outputs":"ReportParams with label, flags, out dir decisions" ,"invariants":["label derives from window type (Month => ym; else \"window\") unless overridden later" ,"split_out is set when out != \"-\"; otherwise resolved by render"] } ,{"file":"src/main.rs" ,"role":"entrypoint/orchestrator" ,"purpose":"Entrypoint orchestrator; normalize → resolve ranges → process ranges; print final JSON or pointer" ,"outputs":"Either full JSON to stdout, or a pointer {dir,file}/{dir,manifest} to stdout; files on disk when split/multi" ,"invariants":["when cfg.multi_windows == true, an overall manifest.json is written and a pointer with {dir, manifest} is printed" ,"when cfg.split_apart == true and cfg.multi_windows == false, a pointer {dir, file} is printed for the range report" ,"when cfg.split_apart == false and cfg.multi_windows == false, a full JSON report is printed to stdout or written to --out"] } ,{"file":"src/enrichment/github_pull_requests.rs" ,"role":"enrichment/integration" ,"purpose":"Best-effort enrichment adding GitHub PR links and PR list to a commit" ,"outputs":"Mutated commit.patch_ref (diff/patch URLs) and commit.github_prs" ,"invariants":["On success, preserves existing commit fields; sets URLs if present in first PR; attaches PR list" ,"On failure, commit remains valid; fields untouched"] } ,{"file":"src/range_windows.rs" ,"role":"resolution/parser" ,"purpose":"Resolve time windows into labeled ranges; parse \"now\" overrides; helpers for natural language buckets" ,"outputs":"Vec<LabeledRange> (chronological earliest→latest); parsed DateTime for now when requested" ,"invariants":["resolve_ranges returns at least one range; ForPhrase buckets are ordered earliest→latest" ,"month_bounds yields [start_of_month, start_of_next_month]" ,"parse_now accepts RFC3339 or naive %Y-%m-%dT%H:%M:%S and never panics"] } ,{"file":"src/range_processor.rs" ,"role":"processing/orchestrator" ,"purpose":"Orchestrate per-range processing: generate report JSON and save artifacts; assemble overall manifest for multi-range runs" ,"outputs":"Files on disk (reports, shards), optional manifest.json; stdout pointer or JSON per state" ,"invariants":["base_dir is prepared when split_apart || multi_windows" ,"per-range report file name is report-<label>.json when written to disk" ,"multi_windows ⇒ manifest.json exists and pointer {dir, manifest} printed" ,"single split ⇒ pointer {dir, file} printed; single non-split ⇒ JSON printed or written to --out"] } ,{"file":"src/cli.rs" ,"role":"cli/normalization" ,"purpose":"Parse CLI flags and produce an EffectiveConfig with consistent defaults and implied flags" ,"outputs":"EffectiveConfig with normalized paths and flags; multi_windows is initialized false (set later)" ,"invariants":["exactly one window selection is provided: --month | --for | (--since & --until)" ,"--detailed implies include_unmerged/include_patch/github_prs" ,"out semantics: file path when single non-split; directory when split or multi"] }]}
