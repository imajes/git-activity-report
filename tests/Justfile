set shell := ["bash", "-eu", "-o", "pipefail", "-c"]

# Snapshots and goldens live under tests/

help-py:
  mkdir -p snapshots
  python3 ../git-activity-report.py --help \
    | sed -e 's#\(.\)/.*git-activity-report#git-activity-report#g' \
          -e 's#git activity-report#git-activity-report#g' \
    > snapshots/help.python.txt

help-rs:
  mkdir -p snapshots
  cargo build >/dev/null
  cargo run --quiet -- --help \
    | sed -e 's#\(.\)/.*git-activity-report#git-activity-report#g' \
    > snapshots/help.rust.txt
  diff -u snapshots/help.python.txt snapshots/help.rust.txt || echo "help output diverged (non-fatal)"

golden-py:
  mkdir -p .tmp
  if [ ! -f .tmp/tmpdir ]; then echo "(hint) run: just build-fixtures"; exit 0; fi
  python3 ../git-activity-report.py --simple --since "2025-08-01" --until "2025-09-01" --repo "$(cat .tmp/tmpdir)" > .tmp/simple.json
  jq -S . fixtures/git-activity-report.simple.fixture.json > .tmp/expected.json
  jq -S . .tmp/simple.json > .tmp/actual.json
  diff -u .tmp/expected.json .tmp/actual.json
  echo "golden OK"

# Generate using the Rust binary and validate against schema + golden
golden-rs:
  mkdir -p .tmp
  if [ ! -f .tmp/tmpdir ]; then echo "(hint) run: just build-fixtures"; exit 0; fi
  cargo build >/dev/null
  cargo run --quiet -- --simple --since "2025-08-01" --until "2025-09-01" --repo "$(cat .tmp/tmpdir)" > .tmp/simple.rs.json
  # Schema validation of generated JSON
  ajv --spec=draft2020 validate -s schemas/git-activity-report.simple.schema.json -d .tmp/simple.rs.json
  echo "golden-rs OK"

# Full mode RS generation and validation
validate-rs-full:
  mkdir -p .tmp/rs_full
  if [ ! -f .tmp/tmpdir ]; then echo "(hint) run: just build-fixtures"; exit 0; fi
  cargo build >/dev/null
  cargo run --quiet -- --full --since "2025-08-01" --until "2025-09-01" --repo "$(cat .tmp/tmpdir)" --split-out .tmp/rs_full --include-unmerged > .tmp/full.rs.out.json
  # Validate range manifest
  ajv --spec=draft2020 validate -s schemas/git-activity-report.full.range.schema.json -d .tmp/rs_full/manifest-window.json
  # Validate produced shards under the label dir
  if compgen -G ".tmp/rs_full/window/*.json" > /dev/null; then \
    ajv --spec=draft2020 validate -s schemas/git-activity-report.commit.schema.json -d ".tmp/rs_full/window/*.json"; \
  fi
  # Validate unmerged shards if present
  if compgen -G ".tmp/rs_full/window/unmerged/*/*.json" > /dev/null; then \
    ajv --spec=draft2020 validate -s schemas/git-activity-report.commit.schema.json -d ".tmp/rs_full/window/unmerged/*/*.json"; \
  fi
  echo "validate-rs-full OK"

# Compare outputs from Python and Rust folders (simple or full)
compare-folders py rs mode="auto":
  bash tests/scripts/compare-outputs.sh {{py}} {{rs}} {{mode}}
